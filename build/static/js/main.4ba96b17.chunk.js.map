{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","remove","name","number","onClick","Persons","props","persons","filter","toLowerCase","includes","filterText","map","key","id","Filter","value","onChange","handler","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","url","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilterText","setMessage","useEffect","PersonService","messageSetter","text","setTimeout","addPerson","returnedPerson","concat","updateNumber","find","n","changedPerson","catch","error","event","target","preventDefault","already","window","confirm","removed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ba96b17.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n  return (\r\n    <>\r\n      {props.persons.filter((person) =>\r\n        person.name.toLowerCase().includes(props.filterText.toLowerCase())\r\n      ).map((person) =>\r\n          <Person\r\n            person={person}\r\n            key={person.id}\r\n            remove={() => props.remove(person.id)}\r\n          />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Person = ({ person, remove }) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number} {' '}\r\n      <button onClick={remove} >delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div> filter shown with: <input value={props.filter} onChange={props.handler} /> </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.addName}>\r\n        <div> name: <input value={props.newName} onChange={props.handleNameChange} /> </div>\r\n        <div> number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n        <div> <button type=\"submit\">add</button> </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={message.type}>\r\n      {message.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://warm-beach-26431.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(url)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(url, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${url}/${id}`)\r\n  return request\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${url}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport PersonService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterText, setFilterText] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    PersonService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const messageSetter = (type, text) => {\n    setMessage( {\n      message: text,\n      type: type\n    })\n    setTimeout(() => {\n      setMessage(null)\n    }, 4000)\n  }\n\n  const addOrUpdate = (event) => {\n    event.preventDefault()\n    const already = persons.find( person => person.name === newName)\n    if (already) {\n      const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if (!confirmed) {\n        return\n      } else {\n        updateNumber(already.id, newNumber)\n      }\n    } else {\n      addPerson()\n    }\n  }\n\n  const addPerson = () => {\n    const newObject = {\n      name: newName,\n      number:newNumber\n    }\n    PersonService\n    .create(newObject)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName(\"\")\n      setNewNumber(\"\")\n      messageSetter(\"success\", `Added ${returnedPerson.name}`)\n    })\n\n  }\n\n  const removeName = id => {\n    const person = persons.find(n => n.id === id)\n    const confirmed = window.confirm(`Delete ${person.name}`)\n    if (confirmed) {\n      PersonService\n      .remove(id)\n      .then(response => {\n        const removed = persons.find(person => person.id === id)\n        setPersons(persons.filter(person => person.id !== id))\n        messageSetter('success', `Removed ${removed.name}`)\n      })\n    }\n  }\n\n  const updateNumber = (id, number) => {\n    const person = persons.find(n => n.id === id)\n    // console.log(person);\n    const changedPerson = {...person, number: number}\n    // console.log(changedPerson);\n    PersonService\n    .update(id, changedPerson)\n    .then(returnedPerson => {\n      setPersons(persons.map(person => {\n        return person.id !== id ? person : returnedPerson\n      }))\n      setNewName(\"\")\n      setNewNumber(\"\")\n      messageSetter('success', `Updated the number of ${returnedPerson.name}`)\n    })\n    .catch(error => {\n      messageSetter('error', `Information of ${person.name} has already been removed from the server`)\n      setPersons(persons.filter(n => n.id !== id))\n    })\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    // console.log(event.target.value)\n    setFilterText(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter filter={filterText} handler={handleFilterChange}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm\n        addName={addOrUpdate}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons\n        persons={persons}\n        filterText={filterText}\n        remove={removeName}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}